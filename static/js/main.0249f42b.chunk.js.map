{"version":3,"sources":["components/LayoutDig/index.js","components/HomeDig/tasksDb.js","components/HomeDig/digStyles.js","components/HomeDig/tasksTabComp.js","components/HomeDig/diggersDb.js","components/HomeDig/index.js","App.js","index.js"],"names":["LayoutDig","react_default","a","createElement","className","name","dist","tasks","id","meters","timeLimit","MainContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","DiggersTab","_templateObject2","TasksTab","_templateObject3","DiggerListWrap","_templateObject4","Person","_templateObject5","Task","_templateObject6","PlanTasksButton","button","_templateObject7","DiggerInputs","_templateObject8","TabNames","_templateObject9","TabButton","_templateObject10","props","activeTab","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","HomeTasks","totalManpowerRequired","tasksCount","useRef","_useState","useState","_useState2","slicedToArray","listOfTasks","setListOfTasks","_useState3","current","_useState4","addTask","setAddTask","handleChange","e","objectSpread","target","handleAdd","_ref","asyncToGenerator","_callee","currentTaskRequirement","prevTasksRequirement","prevTotalHours","prevTotalMeters","_context","preventDefault","task","parseFloat","console","log","concat","totalManpowerAvailable","toConsumableArray","alert","_x","apply","arguments","Fragment","map","onClick","filter","placeholder","onChange","required","min","diggers","gender","metersPerHour","HomeDig_regeneratorRuntime","HomeDig","useEffect","calculateTotalManpowerAvailable","totalManpower","listOfDiggers","digger","setActiveTab","switchTab","newValue","diggersCount","setListOfDiggers","_useState5","_useState6","addDigger","setAddDigger","pushDigger","event","htmlFor","max","step","disabled","App","path","element","index","ReactDOM","createRoot","document","getElementById","render","react_router_dom_dist","src_App"],"mappings":"mQAIe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,KAAK,mBACxBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,KAAK,mBACzBJ,EAAAC,EAAAC,cAACG,EAAA,EAAM,oECRFC,EAAQ,CACnB,CACEC,GAAI,EACJH,KAAM,kBACNI,OAAQ,EACRC,UAAW,GAEb,CACEF,GAAI,EACJH,KAAM,wBACNI,OAAQ,EACRC,UAAW,oBCNFC,EAAgBC,IAAOC,IAAGC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,oLAU1BE,EAAaL,IAAOC,IAAGK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,8FAMvBI,EAAWP,IAAOC,IAAGO,MAAAL,OAAAC,EAAA,EAAAD,CAAA,8FAMrBM,EAAiBT,IAAOC,IAAGS,MAAAP,OAAAC,EAAA,EAAAD,CAAA,oGAO3BQ,EAASX,IAAOC,IAAGW,MAAAT,OAAAC,EAAA,EAAAD,CAAA,0OAcnBU,EAAOb,IAAOC,IAAGa,MAAAX,OAAAC,EAAA,EAAAD,CAAA,4OAejBY,EAAkBf,IAAOgB,OAAMC,MAAAd,OAAAC,EAAA,EAAAD,CAAA,gIAS/Be,EAAelB,IAAOC,IAAGkB,MAAAhB,OAAAC,EAAA,EAAAD,CAAA,+aA4BzBiB,EAAWpB,IAAOC,IAAGoB,MAAAlB,OAAAC,EAAA,EAAAD,CAAA,4DAMrBmB,EAAYtB,IAAOgB,OAAMO,MAAApB,OAAAC,EAAA,EAAAD,CAAA,iUAelC,SAACqB,GACD,GAAIA,EAAM/B,OAAS+B,EAAMC,UACvB,+CC1HNC,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAzB,OAAA0B,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7B,OAAA6B,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAjC,OAAA6B,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAAtD,OAAAuD,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAArE,OAAAsE,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAE,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAA1B,OAAAuD,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAhB,EAAAwG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAA5I,QAAAkC,EAAA4G,KAAA,SAAAH,GAAA,OAAAjI,OAAAqI,eAAArI,OAAAqI,eAAAJ,EAAA/D,IAAA+D,EAAAK,UAAApE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAA1B,OAAAuD,OAAAkB,GAAAwD,GAAAzG,EAAA+G,MAAA,SAAA1E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA5C,EAAAsD,gBAAAtD,EAAAgH,MAAA,SAAAxF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAvD,EAAAwG,oBAAA/E,GAAAyF,IAAA9B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAAyG,EAAA9B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAjD,EAAAmH,KAAA,SAAAC,GAAA,IAAAC,EAAA7I,OAAA4I,GAAAD,EAAA,WAAA5G,KAAA8G,EAAAF,EAAArB,KAAAvF,GAAA,OAAA4G,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAA9F,EAAA4G,EAAAI,MAAA,GAAAhH,KAAA8G,EAAA,OAAAjC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAApF,EAAAgD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAuB,GAAA,GAAA5E,KAAA6E,KAAA,EAAA7E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAAyB,EAAA,QAAA1J,KAAA8E,KAAA,MAAA9E,EAAA4J,OAAA,IAAAvH,EAAAoC,KAAAK,KAAA9E,KAAAsI,OAAAtI,EAAA6J,MAAA,MAAA/E,KAAA9E,QAAAiH,IAAA6C,KAAA,WAAAhF,KAAAiC,MAAA,MAAAgD,EAAAjF,KAAAiD,WAAA,GAAAG,WAAA,aAAA6B,EAAAvF,KAAA,MAAAuF,EAAAxF,IAAA,OAAAO,KAAAkF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAnF,KAAAiC,KAAA,MAAAkD,EAAA,IAAA/F,EAAAY,KAAA,SAAAoF,EAAAC,EAAAC,GAAA,OAAArE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA0F,EAAA/F,EAAAoD,KAAA6C,EAAAC,IAAAlG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAmD,EAAA,QAAA5B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA7C,KAAA6E,KAAA,KAAAU,EAAAhI,EAAAoC,KAAAiD,EAAA,YAAA4C,EAAAjI,EAAAoC,KAAAiD,EAAA,iBAAA2C,GAAAC,EAAA,IAAAxF,KAAA6E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA9C,KAAA6E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAvF,KAAA6E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAAhE,MAAA,6CAAAxB,KAAA6E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA6E,MAAAtH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA6E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA/F,GAAA,aAAAA,IAAA+F,EAAA5C,QAAApD,MAAAgG,EAAA1C,aAAA0C,EAAA,UAAAxE,EAAAwE,IAAArC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAgG,GAAAzF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAiD,EAAA1C,WAAAnD,GAAAI,KAAA0F,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAkF,KAAAlF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA+F,OAAA,SAAA5C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA0F,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAgG,MAAA,SAAA/C,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAmG,EAAA5E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAiD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAxC,EAae,SAAS2I,IAGtB,IAAIC,EAAwB,EAmBtBC,EAAaC,iBAAO9K,EAAMqI,QAAQ0C,EACFC,mBAAShL,GAAMiL,EAAAzK,OAAA0K,EAAA,EAAA1K,CAAAuK,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAGlCI,EAC8BL,mBAAS,CACrC/K,GAAI4K,EAAWS,QAAU,EACzBxL,KAAM,GACNI,OAAQ,GACRC,UAAW,KAEXoL,EAAA/K,OAAA0K,EAAA,EAAA1K,CAAA6K,EAAA,GANKG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAQpBG,EAAe,SAACC,GACpBF,EAAWjL,OAAAoL,EAAA,EAAApL,CAAA,GAAKgL,EAAQhL,OAAA6B,EAAA,EAAA7B,CAAA,GAAEmL,EAAEE,OAAO/L,KAAO6L,EAAEE,OAAOpJ,UAI/CqJ,EAAS,eAAAC,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAuB,IAAA6G,KAAG,SAAAqD,EAAON,GAAC,IAAAO,EAAAC,EAAAC,EAAAC,EAAA,OAAAtK,IAAAwB,KAAA,SAAA+I,GAAA,cAAAA,EAAA7C,KAAA6C,EAAAlF,MAAA,OAiB8C,GAhBtEuE,EAAEY,kBACa,EAEXL,EAAyB,EACF,EACvBE,EAAiB,EACjBC,EAAkB,EAEtBlB,EAAYhG,QAAQ,SAACqH,GACnBH,GAAmBI,WAAWD,EAAKtM,QACnCkM,GAAkBK,WAAWD,EAAKrM,aAEpCgM,EAAuBE,EAAkBD,EAEzCF,EAAyBV,EAAQtL,OAASsL,EAAQrL,UAClDuM,QAAQC,IAAG,+BAAAC,OAAgCV,EAAsB,WACjEtB,EAAwBuB,EAAuBD,IAE3CV,EAAQtL,OAAS,GAAKsL,EAAQrL,UAAY,GAAC,CAAAmM,EAAAlF,KAAA,cACzCyF,GAA0BjC,GAAqB,CAAA0B,EAAAlF,KAAA,gBAAAkF,EAAAlF,KAAA,GAC3CgE,EAAe,SAACD,GACpB,SAAAyB,OAAApM,OAAAsM,EAAA,EAAAtM,CAAW2K,GAAW,CAAEK,MACxB,QAKA,OAJFX,EAAWS,UAEXoB,QAAQC,IAAG,gCAAAC,OACuBV,EAAsB,WACtDI,EAAAlF,KAAA,GACIqE,EAAW,CACfxL,GAAI4K,EAAWS,QAAU,EACzBxL,KAAM,GACNI,OAAQ,GACRC,UAAW,KACX,QAAAmM,EAAAlF,KAAA,iBAEF2F,MAAM,6CAA6C,QAAAT,EAAAlF,KAAA,iBAGrD2F,MAAM,sCAAsC,yBAAAT,EAAA1C,SAAAqC,MAE/C,gBAzCce,GAAA,OAAAjB,EAAAkB,MAAArI,KAAAsI,YAAA,GAgDf,OACExN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACEzN,EAAAC,EAAAC,cAAA,UAAI,SASJF,EAAAC,EAAAC,cAACkB,EAAc,CAAChB,KAAK,YAClBqL,EAAYiC,IAAI,SAACZ,GAAI,OACpB9M,EAAAC,EAAAC,cAACsB,EAAI,CAACqB,IAAKiK,EAAKvM,GAAIH,KAAM0M,EAAK1M,MAC5B0M,EAAK1M,KAAK,IAAE,MACZ0M,EAAKtM,OAAO,IAAE,kBACdsM,EAAKrM,UAAU,IAAE,OAClBT,EAAAC,EAAAC,cAAA,UACEyN,QAAS,WAvBA,IAACpN,IAwBKuM,EAAKvM,GAvB9BmL,EAAeD,EAAYmC,OAAO,SAACd,GAAI,OAAKA,EAAKvM,KAAOA,OAyB/C,SAQPP,EAAAC,EAAAC,cAAC2B,EAAY,CAACzB,KAAK,cACjBJ,EAAAC,EAAAC,cAAA,SACE0E,KAAK,OACLiJ,YAAY,iBACZ1N,UAAU,aACVC,KAAK,OACL2C,MAAO+I,EAAQ1L,KACf0N,SAAU9B,IAGZhM,EAAAC,EAAAC,cAAA,SACE0E,KAAK,SACLiJ,YAAY,QACZ1N,UAAU,aACVC,KAAK,SACLG,GAAG,SACHwC,MAAO+I,EAAQtL,OACfsN,SAAU9B,EACV+B,UAAQ,IAGV/N,EAAAC,EAAAC,cAAA,SACE0E,KAAK,SACLiJ,YAAY,MACZG,IAAI,IAGJ7N,UAAU,aACVC,KAAK,YACLG,GAAG,YACHwC,MAAO+I,EAAQrL,UACfqN,SAAU9B,EACV+B,UAAQ,IAEV/N,EAAAC,EAAAC,cAACwB,EAAe,CAACvB,UAAU,aAAawN,QAASvB,GAAW,WAI9DpM,EAAAC,EAAAC,cAAA,YCzKC,IAAM+N,EAAU,CACrB,CACE1N,GAAI,EACJH,KAAM,UACN8N,OAAQ,IACRC,cAAe,GAEjB,CACE5N,GAAI,EACJH,KAAM,gBACN8N,OAAQ,IACRC,cAAe,IAEjB,CACE5N,GAAI,EACJH,KAAM,cACN8N,OAAQ,IACRC,cAAe,GAGjB,CACE5N,GAAI,EACJH,KAAM,aACN8N,OAAQ,IACRC,cAAe,IAEjB,CACE5N,GAAI,EACJH,KAAM,aACN8N,OAAQ,IACRC,cAAe,iBC7BnBC,EAAA,kBAAA9L,GAAA,IAAAA,EAAA,GAAAC,EAAAzB,OAAA0B,UAAAC,EAAAF,EAAAG,eAAAC,EAAA7B,OAAA6B,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAjC,OAAA6B,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAAtD,OAAAuD,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAArE,OAAAsE,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAE,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAA1B,OAAAuD,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAhB,EAAAwG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAA5I,QAAAkC,EAAA4G,KAAA,SAAAH,GAAA,OAAAjI,OAAAqI,eAAArI,OAAAqI,eAAAJ,EAAA/D,IAAA+D,EAAAK,UAAApE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAA1B,OAAAuD,OAAAkB,GAAAwD,GAAAzG,EAAA+G,MAAA,SAAA1E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA5C,EAAAsD,gBAAAtD,EAAAgH,MAAA,SAAAxF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAvD,EAAAwG,oBAAA/E,GAAAyF,IAAA9B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAAyG,EAAA9B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAjD,EAAAmH,KAAA,SAAAC,GAAA,IAAAC,EAAA7I,OAAA4I,GAAAD,EAAA,WAAA5G,KAAA8G,EAAAF,EAAArB,KAAAvF,GAAA,OAAA4G,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAA9F,EAAA4G,EAAAI,MAAA,GAAAhH,KAAA8G,EAAA,OAAAjC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAApF,EAAAgD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAuB,GAAA,GAAA5E,KAAA6E,KAAA,EAAA7E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAAyB,EAAA,QAAA1J,KAAA8E,KAAA,MAAA9E,EAAA4J,OAAA,IAAAvH,EAAAoC,KAAAK,KAAA9E,KAAAsI,OAAAtI,EAAA6J,MAAA,MAAA/E,KAAA9E,QAAAiH,IAAA6C,KAAA,WAAAhF,KAAAiC,MAAA,MAAAgD,EAAAjF,KAAAiD,WAAA,GAAAG,WAAA,aAAA6B,EAAAvF,KAAA,MAAAuF,EAAAxF,IAAA,OAAAO,KAAAkF,MAAAnD,kBAAA,SAAAoD,GAAA,GAAAnF,KAAAiC,KAAA,MAAAkD,EAAA,IAAA/F,EAAAY,KAAA,SAAAoF,EAAAC,EAAAC,GAAA,OAAArE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA0F,EAAA/F,EAAAoD,KAAA6C,EAAAC,IAAAlG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAmD,EAAA,QAAA5B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA7C,KAAA6E,KAAA,KAAAU,EAAAhI,EAAAoC,KAAAiD,EAAA,YAAA4C,EAAAjI,EAAAoC,KAAAiD,EAAA,iBAAA2C,GAAAC,EAAA,IAAAxF,KAAA6E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA9C,KAAA6E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAvF,KAAA6E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAAhE,MAAA,6CAAAxB,KAAA6E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA6E,MAAAtH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA6E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA/F,GAAA,aAAAA,IAAA+F,EAAA5C,QAAApD,MAAAgG,EAAA1C,aAAA0C,EAAA,UAAAxE,EAAAwE,IAAArC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAgG,GAAAzF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAiD,EAAA1C,WAAAnD,GAAAI,KAAA0F,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAkF,KAAAlF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA+F,OAAA,SAAA5C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA0F,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAgG,MAAA,SAAA/C,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAmG,EAAA5E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAiD,GAAA,UAAArE,MAAA,0BAAAsE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAxC,EAoBO,IAAI6K,EAAyB,EAErB,SAASkB,IACtBC,oBAAU,WACRC,MAGF,IAAMA,EAAkC,WACtC,IAAIC,EAAgB,EAQpB,OAPAC,EAAchJ,QAAQ,SAACiJ,GACrBF,GAAiBzB,WAAW2B,EAAOP,iBAErCnB,QAAQC,IAAG,iDAAAC,OACwCsB,EAAa,WAEhErB,EAAyBqB,EAClBA,GAITnD,EACkCC,mBAAS,eAAcC,EAAAzK,OAAA0K,EAAA,EAAA1K,CAAAuK,EAAA,GAAlDjJ,EAASmJ,EAAA,GAAEoD,EAAYpD,EAAA,GAGxBqD,EAAY,SAAC3C,EAAG4C,GACpB5C,EAAEY,iBAEF8B,EADqBE,IAOjBC,EAAe1D,iBAAO6C,EAAQtF,QAAQgD,EAEFL,mBAAS2C,GAAQpC,EAAA/K,OAAA0K,EAAA,EAAA1K,CAAA6K,EAAA,GAApD8C,EAAa5C,EAAA,GAAEkD,EAAgBlD,EAAA,GAAAmD,EAEJ1D,mBAAS,CACzC/K,GAAIuO,EAAalD,QAAU,EAC3BxL,KAAM,GACN8N,OAAQ,GACRC,cAAe,IACfc,EAAAnO,OAAA0K,EAAA,EAAA1K,CAAAkO,EAAA,GALKE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAMxBjD,EAAe,SAACC,GACpBkD,EAAarO,OAAAoL,EAAA,EAAApL,CAAA,GAAKoO,EAAUpO,OAAA6B,EAAA,EAAA7B,CAAA,GAAEmL,EAAEE,OAAO/L,KAAO6L,EAAEE,OAAOpJ,UAEnDqJ,EAAS,eAAAC,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAsN,IAAAlF,KAAG,SAAAqD,EAAON,GAAC,IAAAmD,EAAA,OAAAhB,IAAAvK,KAAA,SAAA+I,GAAA,cAAAA,EAAA7C,KAAA6C,EAAAlF,MAAA,OASvB,GARDuE,EAAEY,iBACEuC,GAAa,EAGG,IAAlBF,EAAU9O,OAGVgP,GAAa,IAGXA,EAAU,CAAAxC,EAAAlF,KAAA,gBAAAkF,EAAAlF,KAAA,EACNqH,EAAiB,SAACN,GACtB,SAAAvB,OAAApM,OAAAsM,EAAA,EAAAtM,CAAW2N,GAAa,CAAES,MAC1B,OACqB,OAAvBJ,EAAalD,UAAUgB,EAAAlF,KAAA,EACjByH,EAAa,CACjB5O,GAAIuO,EAAalD,QAAU,EAC3BxL,KAAM,GACN8N,OAAQ,GACRC,cAAmC,KAApBe,EAAUhB,OAAgB,GAAM,IAC/C,OAAAtB,EAAAlF,KAAA,iBAEF2F,MAAM,yBAAyB,QAEjC+B,GAAa,EAAM,yBAAAxC,EAAA1C,SAAAqC,MACpB,gBA1Bce,GAAA,OAAAjB,EAAAkB,MAAArI,KAAAsI,YAAA,GAiCf,OACExN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACEzN,EAAAC,EAAAC,cAACQ,EAAa,KAEZV,EAAAC,EAAAC,cAAC6B,EAAQ,KACP/B,EAAAC,EAAAC,cAAC+B,EAAS,CACR7B,KAAK,cACLgC,UAAWA,EACXuL,QAAS,SAAC0B,GACRT,EAAUS,EAAO,iBAEpB,eAGDrP,EAAAC,EAAAC,cAAC+B,EAAS,CACR7B,KAAK,YACLgC,UAAWA,EACXuL,QAAS,SAAC0B,GACRT,EAAUS,EAAO,eAEpB,UAMY,gBAAdjN,GACCpC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACEzN,EAAAC,EAAAC,cAACc,EAAU,KACThB,EAAAC,EAAAC,cAAA,UAAI,UAQJF,EAAAC,EAAAC,cAACkB,EAAc,CAAChB,KAAK,cAClBqO,EAAcf,IAAI,SAACgB,GAAM,OACxB1O,EAAAC,EAAAC,cAACoB,EAAM,CAACuB,IAAK6L,EAAOnO,GAAIH,KAAMsO,EAAOtO,MAClCsO,EAAOtO,KACP,KACkB,MAAlBsO,EAAOR,OACJ,MACkB,MAAlBQ,EAAOR,OACP,OACA,WACH,sBAAsB,IAAmB,KAAjBQ,EAAOR,OAAgB,GAAM,EAAG,IACxD,SACDlO,EAAAC,EAAAC,cAAA,UACEyN,QAAS,WAvDR,IAACpN,IAwDamO,EAAOnO,GAvDxCwO,EAAiBN,EAAcb,OAAO,SAACc,GAAM,OAAKA,EAAOnO,KAAOA,OAyD/C,SAQPP,EAAAC,EAAAC,cAAC2B,EAAY,CAACzB,KAAK,cACjBJ,EAAAC,EAAAC,cAAA,SACE0E,KAAK,OACLiJ,YAAY,mBACZ1N,UAAU,aACVC,KAAK,OACL2C,MAAOmM,EAAU9O,KACjB0N,SAAU9B,IAEZhM,EAAAC,EAAAC,cAAA,SACE0E,KAAK,OACLiJ,YAAY,gBACZ1N,UAAU,aACVC,KAAK,SACLG,GAAG,SACHwC,MAAOmM,EAAUhB,OACjBJ,SAAU9B,IAEZhM,EAAAC,EAAAC,cAAA,SAAOoP,QAAQ,iBAAgB,wBAE/BtP,EAAAC,EAAAC,cAAA,SACE0E,KAAK,SACLoJ,IAAI,MACJuB,IAAI,IACJC,KAAK,MACLrP,UAAU,aACVC,KAAK,gBACLG,GAAG,gBAEHwC,MAA2B,KAApBmM,EAAUhB,OAAgB,GAAM,EACvCuB,UAAQ,EACR3B,SAAU9B,IAEZhM,EAAAC,EAAAC,cAACwB,EAAe,CAACvB,UAAU,aAAawN,QAASvB,GAAW,kBASrD,cAAdhK,GACCpC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACEzN,EAAAC,EAAAC,cAACgB,EAAQ,KAEPlB,EAAAC,EAAAC,cAAC+K,EAAS,UCtLTyE,MAlBf,WACE,OAEE1P,EAAAC,EAAAC,cAACG,EAAA,EAAM,KACLL,EAAAC,EAAAC,cAACG,EAAA,EAAK,CAACsP,KAAK,IAAIC,QAAS5P,EAAAC,EAAAC,cAACH,EAAS,OACjCC,EAAAC,EAAAC,cAACG,EAAA,EAAK,CAACwP,OAAK,EAACD,QAAS5P,EAAAC,EAAAC,cAACmO,EAAO,mBCFzByB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAGHlQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAM,KAELnQ,EAAAC,EAAAC,cAACkQ,EAAG","file":"static/js/main.0249f42b.chunk.js","sourcesContent":["import \"./layout.css\";\r\nimport React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nexport default function LayoutDig() {\r\n  return (\r\n    <div className=\"App\" name=\"layout-dig-body\">\r\n      <div className=\"Page\" name=\"outlet-dig-body\">\r\n        <Outlet />\r\n        {/* Sem router smeruje vsechny podstranky */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const tasks = [\r\n  {\r\n    id: 1,\r\n    name: \"Prikopy namesti\",\r\n    meters: 2,\r\n    timeLimit: 4,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Prace na hlavni tride\",\r\n    meters: 5,\r\n    timeLimit: 8.8,\r\n  },\r\n];\r\n\r\n// export const taskListCount = function (tasks) {\r\n//   let count = 0;\r\n//   tasks.forEach((task) => {\r\n//     count++;\r\n//     //count += element.meters;\r\n//   });\r\n//   console.log(count);\r\n// };\r\n","import styled from \"styled-components\";\r\n// umoznuje pouzivani vlastnich tagu napr. <Vystraha>\r\n// vyzaduje instalaci npm i styled-components\r\n// extension styled-components for VS Code napovida\r\n\r\nexport const MainContainer = styled.div`\r\n  position: relative;\r\n  top: 10vh;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  align-content: center;\r\n  width: 95%;\r\n  border: 1px solid black;\r\n`;\r\nexport const DiggersTab = styled.div`\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: 300px;\r\n  background-color: beige;\r\n`;\r\nexport const TasksTab = styled.div`\r\n  padding: 15px;\r\n  width: 100%;\r\n  min-height: 300px;\r\n  background-color: beige;\r\n`;\r\nexport const DiggerListWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 550px;\r\n  *background: trasparent;\r\n`;\r\n\r\nexport const Person = styled.div`\r\n  border: 1px solid black;\r\n  width: 95%;\r\n  background-color: yellow;\r\n  & button {\r\n    width: 29px;\r\n    height: 29px;\r\n    font-size: 12px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const Task = styled.div`\r\n  border: 1px solid black;\r\n  width: 95%;\r\n  background-color: yellow;\r\n\r\n  & button {\r\n    width: 29px;\r\n    height: 29px;\r\n    font-size: 12px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const PlanTasksButton = styled.button`\r\n  width: auto;\r\n  padding-left: 3px;\r\n  padding-right: 3px;\r\n  height: 30px;\r\n  align-self: center;\r\n  color: green;\r\n`;\r\n\r\nexport const DiggerInputs = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  height: 30px;\r\n  & input {\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    width: 12rem;\r\n    &[type=\"number\"] {\r\n      width: 3rem;\r\n    }\r\n  }\r\n  & label {\r\n    height: 30px;\r\n    line-height: 30px;\r\n    *vertical-align: middle;\r\n    font-size: 12px;\r\n    display: block;\r\n    *padding-right: 5px;\r\n    margin-right: 5px;\r\n  }\r\n  #gender {\r\n    width: 6rem;\r\n  }\r\n`;\r\n\r\n//// TLACITKA PRO TAB\r\nexport const TabNames = styled.div`\r\n  margin: 0;\r\n  *height: 40px;\r\n  display: flex;\r\n`;\r\n\r\nexport const TabButton = styled.button`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 30px;\r\n  width: auto;\r\n  border: 0px;\r\n  border-right: 1px solid black;\r\n  border-bottom: 0;\r\n  padding: 5px;\r\n  color: black;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  ${(props) => {\r\n    if (props.name === props.activeTab) {\r\n      return `background-color:beige;`;\r\n    }\r\n  }}\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport { tasks, taskListCount } from \"./tasksDb\";\r\n\r\n//netreba\r\nimport HomeDig, { totalManpowerAvailable } from \"./index\";\r\n\r\nimport {\r\n  Task,\r\n  PlanTasksButton,\r\n  DiggerListWrap,\r\n  DiggerInputs,\r\n} from \"./digStyles\";\r\n\r\nexport default function HomeTasks() {\r\n  // const [tasksList, setTasksList] = useState(Tasks);\r\n\r\n  let totalManpowerRequired = 0;\r\n  //   const totalManpowerRequired = function () {\r\n  //     //kolik za hod vykopou vsichni pracovnici - pak nutno odecist jiz naplanovane\r\n  //     let totalHours = 0;\r\n  //     let totalMeters = 0;\r\n  //     // console.log(listOfTasks.length);\r\n  //     listOfTasks.forEach((task) => {\r\n  //       totalMeters += parseFloat(task.meters);\r\n  //       totalHours += parseFloat(task.timeLimit);\r\n  //     });\r\n  //     console.log(\r\n  //       `Vyzadovana pracovni sila na je ${\r\n  //         totalMeters / totalHours\r\n  //       } metru za hodinu X Pracovnici dohromady za hod. zvladnou vykopat ${totalManpowerAvailable}`\r\n  //     );\r\n  //     return totalMeters / totalHours;\r\n  //   };\r\n\r\n  // FCE pridani ukolu\r\n  const tasksCount = useRef(tasks.length);\r\n  const [listOfTasks, setListOfTasks] = useState(tasks);\r\n  //   const [enableAdd, setEnableAdd] = useState(disabled);\r\n\r\n  //objekt addTask{}, ktery se pri zmene inputu postupne sestavuje, useState mu udeluje vychozi hodnoty jeho properties\r\n  const [addTask, setAddTask] = useState({\r\n    id: tasksCount.current + 1,\r\n    name: \"\",\r\n    meters: \"\",\r\n    timeLimit: \"\",\r\n    // sem metoda setAddTask doplni (pri pouziti spread) ci nahradi klic a hodnotu property {key:value,}\r\n  });\r\n  // pri zapisu inputu doplnuje do objektu addTask (spread operatorem ...addTask)\r\n  const handleChange = (e) => {\r\n    setAddTask({ ...addTask, [e.target.name]: e.target.value });\r\n    // pro pridani/zmenu properties vyuziva elementu spoustejiciho udalost - event.target.vlastnost\r\n  };\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault(); // lze take vyuzit HMTL zpusob: onEvent=\"return false\"\r\n    let pushTask = false;\r\n\r\n    let currentTaskRequirement = 0;\r\n    let prevTasksRequirement = 0;\r\n    let prevTotalHours = 0;\r\n    let prevTotalMeters = 0;\r\n    // console.log(listOfTasks.length);\r\n    listOfTasks.forEach((task) => {\r\n      prevTotalMeters += parseFloat(task.meters);\r\n      prevTotalHours += parseFloat(task.timeLimit);\r\n    });\r\n    prevTasksRequirement = prevTotalMeters / prevTotalHours;\r\n\r\n    currentTaskRequirement = addTask.meters / addTask.timeLimit;\r\n    console.log(`Naroky pridaneho ukonu jsou ${currentTaskRequirement} m/hod`);\r\n    totalManpowerRequired = prevTasksRequirement + currentTaskRequirement;\r\n\r\n    if (addTask.meters > 0 && addTask.timeLimit > 0) {\r\n      if (totalManpowerAvailable >= totalManpowerRequired) {\r\n        await setListOfTasks((listOfTasks) => {\r\n          return [...listOfTasks, addTask];\r\n        });\r\n        tasksCount.current++;\r\n\r\n        console.log(\r\n          `Naroky vsech ukonu jsou nyni ${currentTaskRequirement} m/hod`\r\n        );\r\n        await setAddTask({\r\n          id: tasksCount.current + 1,\r\n          name: \"\",\r\n          meters: \"\",\r\n          timeLimit: \"\",\r\n        });\r\n      } else {\r\n        alert(\"Nelze pridat dalsi ukol (malo pracovniku)\");\r\n      }\r\n    } else {\r\n      alert(\"Vyplnit metry a casovy limit ukolu\");\r\n    }\r\n  };\r\n  // odstraneni pracovnika\r\n  const handleDelete = (id) => {\r\n    setListOfTasks(listOfTasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  /////////////RETURN //////////////////\r\n  return (\r\n    <>\r\n      <h1>UKOLY</h1>\r\n\r\n      {/* smycka vypisujici ukoly */}\r\n      {/* {tasks.map((task) => (\r\n                <Person key={task.id}>\r\n                  {task.name} vykope {task.timeLimit} metru za hodinu\r\n                </Person>\r\n              ))} */}\r\n      {/* ///////////////////////////// */}\r\n      <DiggerListWrap name=\"taskList\">\r\n        {listOfTasks.map((task) => (\r\n          <Task key={task.id} name={task.name}>\r\n            {task.name} {\" - \"}\r\n            {task.meters} {\" metru - limit \"}\r\n            {task.timeLimit} {\" hod\"}\r\n            <button\r\n              onClick={() => {\r\n                handleDelete(task.id);\r\n              }}\r\n            >\r\n              X\r\n            </button>\r\n          </Task>\r\n        ))}\r\n      </DiggerListWrap>\r\n      {/* VSTUP */}\r\n\r\n      <DiggerInputs name=\"diggerForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Oznaceni ukolu\"\r\n          className=\"inputClass\"\r\n          name=\"name\"\r\n          value={addTask.name}\r\n          onChange={handleChange}\r\n        />\r\n        {/* <label htmlFor=\"meters\">Metru</label> */}\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"metry\"\r\n          className=\"inputClass\"\r\n          name=\"meters\"\r\n          id=\"meters\"\r\n          value={addTask.meters}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {/* <label htmlFor=\"timeLimit\">Max hodin</label> */}\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"hod\"\r\n          min=\"1\"\r\n          //   max=\"999\"\r\n          //   step=\"1\"\r\n          className=\"inputClass\"\r\n          name=\"timeLimit\"\r\n          id=\"timeLimit\"\r\n          value={addTask.timeLimit}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <PlanTasksButton className=\"inputClass\" onClick={handleAdd}>\r\n          Pridat\r\n        </PlanTasksButton>\r\n      </DiggerInputs>\r\n      <br />\r\n      {/* <PlanTasksButton className=\"inputClass\" onClick={handleAdd}>\r\n          Naplanovat vse\r\n        </PlanTasksButton> */}\r\n    </>\r\n  );\r\n}\r\n","export const diggers = [\r\n  {\r\n    id: 1,\r\n    name: \"Jan Cap\",\r\n    gender: \"m\",\r\n    metersPerHour: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Marie Novotna\",\r\n    gender: \"f\",\r\n    metersPerHour: 0.5,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Vaclav Maly\",\r\n    gender: \"m\",\r\n    metersPerHour: 1,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    name: \"Jana Stara\",\r\n    gender: \"f\",\r\n    metersPerHour: 0.5,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Karel Novy\",\r\n    gender: \"m\",\r\n    metersPerHour: 1,\r\n  },\r\n];\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport HomeTasks, { logTotalManpower } from \"./tasksTabComp\";\r\n\r\n//nacteni dat o osobach\r\nimport { diggers } from \"./diggersDb\";\r\n\r\n// importuji vlasni elementy z pomocneho stylovani (vyzadujici npm i styled-components)\r\nimport {\r\n  MainContainer,\r\n  DiggersTab,\r\n  Person,\r\n  TasksTab,\r\n  Task,\r\n  PlanTasksButton,\r\n  TabNames,\r\n  TabButton,\r\n  DiggerListWrap,\r\n  DiggerInputs,\r\n} from \"./digStyles\";\r\n\r\nexport let totalManpowerAvailable = 0;\r\n//rendering hlavni a jedine stranky\r\nexport default function HomeDig() {\r\n  useEffect(() => {\r\n    calculateTotalManpowerAvailable();\r\n  });\r\n\r\n  const calculateTotalManpowerAvailable = function () {\r\n    let totalManpower = 0;\r\n    listOfDiggers.forEach((digger) => {\r\n      totalManpower += parseFloat(digger.metersPerHour);\r\n    });\r\n    console.log(\r\n      `Pracovnici dohromady za hod. zvladnou vykopat ${totalManpower} metry`\r\n    );\r\n    totalManpowerAvailable = totalManpower;\r\n    return totalManpower;\r\n  };\r\n  //deklarace promennych, setteru a sledovani useState dat pro trigger prerenderovani\r\n\r\n  //SLEDOVANI TAB\r\n  const [activeTab, setActiveTab] = useState(\"diggers-tab\");\r\n\r\n  // FCE PREPINAJICI TAB\r\n  const switchTab = (e, newValue) => {\r\n    e.preventDefault();\r\n    const newActiveTab = newValue;\r\n    setActiveTab(newActiveTab);\r\n  };\r\n\r\n  // const [diggersList, setDiggersList] = useState(Diggers);\r\n\r\n  // FCE pridani pracovnika\r\n  const diggersCount = useRef(diggers.length);\r\n\r\n  const [listOfDiggers, setListOfDiggers] = useState(diggers);\r\n\r\n  const [addDigger, setAddDigger] = useState({\r\n    id: diggersCount.current + 1,\r\n    name: \"\",\r\n    gender: \"\",\r\n    metersPerHour: 1,\r\n  });\r\n  const handleChange = (e) => {\r\n    setAddDigger({ ...addDigger, [e.target.name]: e.target.value });\r\n  };\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    let pushDigger = false;\r\n\r\n    if (\r\n      addDigger.name != \"\"\r\n      //  podminka pridani kopace\r\n    ) {\r\n      pushDigger = true;\r\n    }\r\n\r\n    if (pushDigger) {\r\n      await setListOfDiggers((listOfDiggers) => {\r\n        return [...listOfDiggers, addDigger];\r\n      });\r\n      diggersCount.current++;\r\n      await setAddDigger({\r\n        id: diggersCount.current + 1,\r\n        name: \"\",\r\n        gender: \"\",\r\n        metersPerHour: addDigger.gender == \"f\" ? 0.5 : 1,\r\n      });\r\n    } else {\r\n      alert(\"Vyplnit alespon jmeno\");\r\n    }\r\n    pushDigger = false;\r\n  };\r\n  // odstraneni pracovnika\r\n  const handleDelete = (id) => {\r\n    setListOfDiggers(listOfDiggers.filter((digger) => digger.id !== id));\r\n  };\r\n\r\n  //VYSTUP\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        {/* PREPINANI TAB */}\r\n        <TabNames>\r\n          <TabButton\r\n            name=\"diggers-tab\"\r\n            activeTab={activeTab}\r\n            onClick={(event) => {\r\n              switchTab(event, \"diggers-tab\");\r\n            }}\r\n          >\r\n            Zamestnanci\r\n          </TabButton>\r\n          <TabButton\r\n            name=\"tasks-tab\"\r\n            activeTab={activeTab}\r\n            onClick={(event) => {\r\n              switchTab(event, \"tasks-tab\");\r\n            }}\r\n          >\r\n            Ukoly\r\n          </TabButton>\r\n        </TabNames>\r\n\r\n        {/* KONEC TLACITEK ZACATEK TAB */}\r\n        {activeTab === \"diggers-tab\" && (\r\n          <>\r\n            <DiggersTab>\r\n              <h1>KOPACI</h1>\r\n              {/* smycka vypisujici kopace */}\r\n              {/* {diggers.map((digger) => (\r\n                <Person key={digger.id}>\r\n                  {digger.name} vykope {digger.metersPerHour} metru za hodinu\r\n                </Person>\r\n              ))} */}\r\n              {/* ///////////////////////////// */}\r\n              <DiggerListWrap name=\"diggerList\">\r\n                {listOfDiggers.map((digger) => (\r\n                  <Person key={digger.id} name={digger.name}>\r\n                    {digger.name}\r\n                    {\" (\"}\r\n                    {digger.gender === \"m\"\r\n                      ? \"muz\"\r\n                      : digger.gender === \"f\"\r\n                      ? \"zena\"\r\n                      : \"neurceno\"}\r\n                    {\") - kopajici tempem\"} {digger.gender == \"f\" ? 0.5 : 1}{\" \"}\r\n                    {\" m/hod\"}\r\n                    <button\r\n                      onClick={() => {\r\n                        handleDelete(digger.id);\r\n                      }}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </Person>\r\n                ))}\r\n              </DiggerListWrap>\r\n              {/* VSTUP */}\r\n\r\n              <DiggerInputs name=\"diggerForm\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Jmeno pracovnika\"\r\n                  className=\"inputClass\"\r\n                  name=\"name\"\r\n                  value={addDigger.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"m=muz, f=zena\"\r\n                  className=\"inputClass\"\r\n                  name=\"gender\"\r\n                  id=\"gender\"\r\n                  value={addDigger.gender}\r\n                  onChange={handleChange}\r\n                />\r\n                <label htmlFor=\"metersPerHour\">kope metru za hodinu</label>\r\n                {/* nemuze byt klasicke for, ale htmlFor */}\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0.5\"\r\n                  max=\"1\"\r\n                  step=\"0.5\"\r\n                  className=\"inputClass\"\r\n                  name=\"metersPerHour\"\r\n                  id=\"metersPerHour\"\r\n                  //value={addDigger.metersPerHour}\r\n                  value={addDigger.gender == \"f\" ? 0.5 : 1}\r\n                  disabled\r\n                  onChange={handleChange}\r\n                />\r\n                <PlanTasksButton className=\"inputClass\" onClick={handleAdd}>\r\n                  Přidat\r\n                </PlanTasksButton>\r\n              </DiggerInputs>\r\n            </DiggersTab>\r\n          </>\r\n        )}\r\n\r\n        {/* TAB S PLANOVANYMI UKOLY */}\r\n        {activeTab === \"tasks-tab\" && (\r\n          <>\r\n            <TasksTab>\r\n              {/* zde se nacita komponent ze souboru tasksTabComp.js */}\r\n              <HomeTasks />\r\n            </TasksTab>\r\n          </>\r\n        )}\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport React, { Suspense } from \"react\";\nimport LayoutDig from \"./components/LayoutDig\";\nimport HomeDig from \"./components/HomeDig\";\n\nfunction App() {\n  return (\n    // namisto primo vraceni HTML radeji smeruje pozadavky z URL adresy na jednotlive stranky, navic zanorene v globalnim divu Layout-dig\n    <Routes>\n      <Route path=\"/\" element={<LayoutDig />}>\n        <Route index element={<HomeDig />} />\n\n        {/* <Route path=\"/page2\" element={<Page2-dig />}/> */}\n      </Route>\n    </Routes>\n    // <div className=\"App\">\n    //   <h1>\n    //     Hello <small>earth!</small>\n    //   </h1>\n    // </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import { Router } from \"react-router-dom\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n// u teto verze Routeru fungovalo vyuziti BrowserRouter pripadne asi HashRouter\n// npm verze 8.19.2, node verze v18.12.\n// reinstall node na v16.13.2\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // {/* // zpusobuje, ze se renderuje 2x */}\n  // <React.StrictMode>\n  <Router>\n    {/* novejsi verze Routeru vyzaduje, aby byla cela aplikace obalena tagem Router 10:52 */}\n    <App />\n    {/* spusteni aplikace exportovane z App.js */}\n  </Router>\n  // {/* </React.StrictMode> */}\n);\n"],"sourceRoot":""}